NAME
    WWW::UptimeRobot - Inteface to API service at WWW::UptimeRobot

VERSION
    Version 0.01

SYNOPSIS
    Quick summary of what the module does.

        use WWW::UptimeRobot;

        my $robot = WWW::UptimeRobot->new( api_key => 'magic-key' );
        my $resp = $robot->get_monitors;

        # don't ask me on the format
        if ( $resp->{monitors} && $resp->{monitors}->{monitor} ) {
            my $monitors = $resp->{monitors}->{monitor};

            foreach my $monitor ( @$monitors ) {
                print "name: ", $monitor->{friendlyname}, ", url: ", $monitor->{url}, "\n";
            }
        }

METHODS
  new
    * api_key - api key from uptime robot (required)
    * hostname - hostname of uptime robot service (default: )
    * ua - custom user agent

API METHODS
    The following are methods that correspond to Uptime Robot's API methods.

  get_monitors
    Retrieves all monitors for current account:
    http://www.uptimerobot.com/api.asp#getMonitors

  get_alert_contacts
    Retrieves all alert contacts including status

Utility Methods
    The following are methods used for various purposes

  monitor_type(id)
    Decodes 'id' into value

  others to come....
AUTHOR
    Lee Carmichael, `<lee at leecarmichael.com>'

BUGS
    Please report any bugs or feature requests to GITHUB

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc WWW::UptimeRobot

    You can also look for information at:

    * Github Issue Tracker
        https://github.com/lecar-red/WWW-UptimeRobot/issues

    * AnnoCPAN: Annotated CPAN documentation
        http://annocpan.org/dist/WWW-UptimeRobot

    * CPAN Ratings
        http://cpanratings.perl.org/d/WWW-UptimeRobot

    * Search CPAN
        http://metacpan.org/dist/WWW-UptimeRobot/

SEE ALSO
    `LWP::UserAgent', `Moo'

ACKNOWLEDGEMENTS
    Uptime Robot for nice service!

LICENSE AND COPYRIGHT
    Copyright 2013 Lee Carmichael.

    This program is free software; you can redistribute it and/or modify it
    under the terms of the the Artistic License (2.0). You may obtain a copy
    of the full license at:

    http://www.perlfoundation.org/artistic_license_2_0

    Any use, modification, and distribution of the Standard or Modified
    Versions is governed by this Artistic License. By using, modifying or
    distributing the Package, you accept this license. Do not use, modify,
    or distribute the Package, if you do not accept this license.

    If your Modified Version has been derived from a Modified Version made
    by someone other than you, you are nevertheless required to ensure that
    your Modified Version complies with the requirements of this license.

    This license does not grant you the right to use any trademark, service
    mark, tradename, or logo of the Copyright Holder.

    This license includes the non-exclusive, worldwide, free-of-charge
    patent license to make, have made, use, offer to sell, sell, import and
    otherwise transfer the Package with respect to any patent claims
    licensable by the Copyright Holder that are necessarily infringed by the
    Package. If you institute patent litigation (including a cross-claim or
    counterclaim) against any party alleging that the Package constitutes
    direct or contributory patent infringement, then this Artistic License
    to you shall terminate on the date that such litigation is filed.

    Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
    AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
    THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
    YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
    CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

